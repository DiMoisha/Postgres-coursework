		КУРСОВАЯ РАБОТА ПО ПРЕДМЕТУ: Базы данных. PostgreSQL


	В качестве практического задания необходимо выполнить курсовой проект. За основу проекта можно взять
любой сервис на ваше усмотрение. Например, вы можете использовать любую социальную сеть (кроме
ВКонтакте), интернет-магазин, стриминговый сервис и т.д. Желательно чтобы вы понимали как работает
приложение, это упростит работу над проектом. Для выбранного сервиса необходимо последовательно
выполнить следующие шаги:
1. Проанализировать бизнес-логику приложения и создать структуру базы данных, которая может
использоваться для хранения данных этого приложения. В базе данных должно быть минимум десять
таблиц. Если таблиц получается более двадцати то рекомендуется ограничиться частью функционала
приложения и не превышать это количество. В качестве отчета по этой части проекта необходимо
приложить команды создания таблиц.
2. Используя генератор тестовых данных, заполнить созданную БД данными в количестве минимум сто
строк для тех таблиц, где это имеет смысл. Доработать данные запросами если это необходимо. В
качестве отчёта приложить дамп БД с данными.
3. Создать внешние ключи, если они не были созданы на шаге 1 в командах создания таблиц. В качестве
отчета приложить команды создания внешних ключей.
4. Создать диаграмму отношений. В качестве отчета приложить файл изображения диаграммы
отношений.
5. Создать два сложных (многотабличных) запроса с использованием подзапросов.
6. Создать два сложных запроса с использованием объединения JOIN и без использования подзапросов.
7. Создать два представления, в основе которых лежат сложные запросы.
8. Создать пользовательскую функцию.
9. Создать триггер.
10. Для одного из запросов, созданных в пункте 6, провести оптимизацию. В качестве отчета приложить
планы выполнения запроса, ваш анализ и показать действия, которые улучшили эффективность
запроса.




ВЫПОЛНЕНИЕ

8. Создать пользовательскую функцию.

-- Создаем функцию, которая по индентификатору пользователя, ищет самый популярный товар 
-- у этого пользователя

CREATE OR REPLACE FUNCTION getPopularProductIdByUser(searchUserId INTEGER)
RETURNS INTEGER AS
$$
SELECT d.ProductId
FROM orders o INNER JOIN orderdetails d ON o.orderid = d.orderid
WHERE o.userid = searchUserId
GROUP BY d.ProductId
ORDER BY COUNT(d.orderid) DESC, d.ProductId
LIMIT 1;
$$
LANGUAGE SQL;

Проверяем сначала выборкой, потом функцией:

--выборка для проверки
-- ИД пользователей: 52(2 3раза), 30(5 2 раза), 91(6 2 раза)б 40(9 2 раза)
SELECT d.*
FROM orders o INNER JOIN orderdetails d ON o.orderid = d.orderid
WHERE o.userid = 52
ORDER BY d.ProductId

выборка:

"orderdetailid"	"orderid"	"cartid"	"productid"	"quantity"	"price"	"sm"
----------------------------------------------------------------------------------------------------
81	295	391	2	19.000	788439.00	14980341.00
821	419	758	2	14.000	600472.00	8406608.00
773	295	907	2	34.000	577645.00	19639930.00
601	295	506	26	8.000	108459.00	867672.00
309	283	586	29	17.000	728576.00	12385792.00
508	419	522	31	38.000	265938.00	10105644.00
42	451	925	37	44.000	429083.00	18879652.00
943	283	815	52	16.000	305308.00	4884928.00
893	451	413	81	39.000	712383.00	27782937.00
532	451	235	82	6.000	920195.00	5521170.00
392	419	64	122	40.000	527179.00	21087160.00
6	451	196	122	8.000	924964.00	7399712.00
536	283	572	127	36.000	446439.00	16071804.00
905	451	23	148	3.000	309958.00	929874.00



-- и саму функцию
SELECT getPopularProductIdByUser(52) mostPopularProductId;

результат:

"mostpopularproductid"
----------------------
2



